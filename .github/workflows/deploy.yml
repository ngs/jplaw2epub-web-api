name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: asia-northeast1
  SERVICE_NAME: jplaw2epub-server
  REPOSITORY: cloud-run-source-deploy

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Configure docker for Artifact Registry'
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev

      - name: 'Build and push Docker image'
        run: |
          IMAGE_TAG="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${SERVICE_NAME}:${GITHUB_SHA}"
          
          docker build \
            -t "${IMAGE_TAG}" \
            -f Dockerfile \
            .
          
          docker push "${IMAGE_TAG}"
          
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: 'Deploy to Cloud Run'
        run: |
          gcloud run deploy ${SERVICE_NAME} \
            --image="${IMAGE_TAG}" \
            --region=${REGION} \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --cpu=1 \
            --memory=512Mi \
            --max-instances=10 \
            --set-env-vars="PORT=8080"

      - name: 'Get service URL'
        run: |
          SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} \
            --region=${REGION} \
            --format='value(status.url)')
          echo "Service deployed to: ${SERVICE_URL}"
          echo "SERVICE_URL=${SERVICE_URL}" >> $GITHUB_ENV

      - name: 'Test deployment'
        run: |
          echo "Testing health endpoint..."
          curl -f "${SERVICE_URL}/health" || exit 1
          
          echo "Testing GraphQL endpoint..."
          curl -X POST "${SERVICE_URL}/graphql" \
            -H "Content-Type: application/json" \
            -d '{"query": "{ laws(limit: 1) { totalCount } }"}' || exit 1