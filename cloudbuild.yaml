steps:
  # Build the container image
  # Artifact Registry is recommended over Container Registry (gcr.io)
  - name: "gcr.io/cloud-builders/docker"
    id: "build-image"
    args:
      - "build"
      - "-t"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
      - "-t"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest"
      - "-t"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$SHORT_SHA"
      - "-f"
      - "Dockerfile"
      - "."

  # Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    id: "push-image"
    args:
      - "push"
      - "--all-tags"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}"

  # Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-cloud-run"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image"
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
      - "--region"
      - "${_REGION}"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "8080"
      - "--cpu"
      - "1"
      - "--memory"
      - "512Mi"
      - "--max-instances"
      - "10"
      - "--min-instances"
      - "0"
      - "--timeout"
      - "60"

  # Test the deployed service
  - name: "gcr.io/cloud-builders/gcloud"
    id: "test-deployment"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Get service URL
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} \
          --region=${_REGION} \
          --format='value(status.url)')

        echo "Service deployed to: $${SERVICE_URL}"

        # Wait for service to be ready
        echo "Waiting for service to be ready..."
        for i in {1..30}; do
          if curl -f "$${SERVICE_URL}/health" 2>/dev/null; then
            echo "‚úÖ Health check passed!"
            break
          fi
          if [ $$i -eq 30 ]; then
            echo "‚ùå Health check failed after 30 attempts"
            exit 1
          fi
          echo "Attempt $$i/30: Service not ready yet..."
          sleep 2
        done

        # Test GraphQL endpoint
        echo "Testing GraphQL endpoint..."
        RESPONSE=$$(curl -s -X POST "$${SERVICE_URL}/graphql" \
          -H "Content-Type: application/json" \
          -d '{"query": "{ laws(limit: 1) { totalCount } }"}')

        if echo "$${RESPONSE}" | grep -q '"errors"'; then
          echo "‚ùå GraphQL test failed"
          echo "$${RESPONSE}"
          exit 1
        fi

        echo "‚úÖ GraphQL test passed!"
        echo "üöÄ Deployment successful: $${SERVICE_URL}"

# Build configuration options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
  dynamic_substitutions: true

# Substitutions (can be overridden at build time)
substitutions:
  _REGION: asia-northeast1
  _REPOSITORY: cloud-run-source-deploy
  _SERVICE_NAME: jplaw2epub-api

# Store images in Artifact Registry
images:
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest"
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$SHORT_SHA"

# Build timeout
timeout: "1200s"
